1:HL["/_next/static/css/f70efcea16bb2b80.css",{"as":"style"}]
0:[[["",{"children":["blog",{"children":[["slug","bash","d"],{"children":[["post","bash-01","d"],{"children":["__PAGE__?{\"slug\":\"bash\",\"post\":\"bash-01\"}",{}]}]}]}]},"$undefined","$undefined",true],"$L2",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/f70efcea16bb2b80.css","precedence":"next"}]],["$L3",null]]]]
4:HL["/_next/static/css/7f6bd37aab40623f.css",{"as":"style"}]
5:I{"id":"105","chunks":["414:static/chunks/414-ae10eb72abcd9c6c.js","185:static/chunks/app/layout-e7b488efd7f25151.js"],"name":"","async":false}
6:I{"id":"97","chunks":["414:static/chunks/414-ae10eb72abcd9c6c.js","185:static/chunks/app/layout-e7b488efd7f25151.js"],"name":"","async":false}
7:I{"id":"4724","chunks":["414:static/chunks/414-ae10eb72abcd9c6c.js","185:static/chunks/app/layout-e7b488efd7f25151.js"],"name":"","async":false}
8:I{"id":"3066","chunks":["414:static/chunks/414-ae10eb72abcd9c6c.js","185:static/chunks/app/layout-e7b488efd7f25151.js"],"name":"","async":false}
9:I{"id":"9544","chunks":["272:static/chunks/webpack-1d1b5ef8f188a0ac.js","667:static/chunks/2443530c-38cbe0b4896a762b.js","139:static/chunks/139-829349179db9c29c.js"],"name":"","async":false}
a:I{"id":"99","chunks":["272:static/chunks/webpack-1d1b5ef8f188a0ac.js","667:static/chunks/2443530c-38cbe0b4896a762b.js","139:static/chunks/139-829349179db9c29c.js"],"name":"","async":false}
2:[["$","html",null,{"lang":"en","children":["$","body",null,{"children":["$","$L5",null,{"children":["$","$L6",null,{"children":[["$","$L7",null,{}],["$","$L8",null,{"children":["$","$L9",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$La",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","asNotFound":"$undefined","childProp":{"current":[["$","div",null,{"className":"blog-layout","style":{"width":"100%"},"children":["$","$L9",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$La",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","asNotFound":"$undefined","childProp":{"current":["$","$L9",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children",["slug","bash","d"],"children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$La",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","asNotFound":"$undefined","childProp":{"current":["$","$L9",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children",["slug","bash","d"],"children",["post","bash-01","d"],"children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$La",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","asNotFound":"$undefined","childProp":{"current":["$Lb",null],"segment":"__PAGE__?{\"slug\":\"bash\",\"post\":\"bash-01\"}"},"styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/7f6bd37aab40623f.css","precedence":"next"}]]}],"segment":["post","bash-01","d"]},"styles":[]}],"segment":["slug","bash","d"]},"styles":[]}]}],null],"segment":"blog"},"styles":[]}]}],["$","div",null,{"className":"h-20 text-sm text-center leading-8 pt-3","children":[["$","p",null,{"children":"Welcome Fanxing's Web"}],["$","p",null,{"children":"这是我用来记录学习的个人网站"}]]}]]}]}]}]}],null]
3:[[["$","meta",null,{"charSet":"utf-8"}],["$","title",null,{"children":"Fanxing's Web"}],["$","meta",null,{"name":"description","content":"凡星（fanxing）的个人小站，记录学习。"}],null,null,null,null,null,null,null,null,["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1"}],null,null,["$","meta",null,{"name":"robots","content":"index,follow"}],null,null,null,null,null,null,null,[]],[null,null,null,null],null,null,[null,null,null,null,null],null,null,null,null,[null,[["$","link",null,{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"any"}]],[],null]]
c:"$Sreact.suspense"
d:I{"id":"2666","chunks":["112:static/chunks/app/blog/[slug]/[post]/page-0a0a14724ace3188.js"],"name":"NoSSR","async":false}
e:I{"id":"4840","chunks":["112:static/chunks/app/blog/[slug]/[post]/page-0a0a14724ace3188.js"],"name":"","async":false}
b:[["$","h1",null,{"className":"blog-title","style":{"borderBottom":0},"children":"Git常用指令"}],["$","div",null,{"className":"markdown-body","dangerouslySetInnerHTML":{"__html":"<h1 id=\"set-registry\">1. set registry</h1>\n<pre><button type=\"button\" class=\"copy-button\">Copy</button><code class=\"hljs language-bash\"><span class=\"hljs-comment\"># 设置国内镜像源</span>\nnpm config <span class=\"hljs-built_in\">set</span> registry https://registry.npm.taobao.org\n\nyarn config <span class=\"hljs-built_in\">set</span> registry https://registry.npm.taobao.org\n\n<span class=\"hljs-comment\"># 查看设置</span>\nnpm config get registry\n\nyarn config get registry\n</code></pre>\n<h1 id=\"stash\">2. stash</h1>\n<h4 id=\"\">缓存本地修改</h4>\n<pre><button type=\"button\" class=\"copy-button\">Copy</button><code class=\"hljs language-bash\"><span class=\"hljs-comment\"># 保存当前未commit的代码</span>\ngit stash\n\n<span class=\"hljs-comment\"># 保存当前未commit的代码并添加备注</span>\ngit stash save <span class=\"hljs-string\">\"备注的内容\"</span>\n\n<span class=\"hljs-comment\"># 列出stash的所有记录</span>\ngit stash list\n\n<span class=\"hljs-comment\"># 删除stash的所有记录</span>\ngit stash clear\n\n<span class=\"hljs-comment\"># 应用最近一次的stash</span>\ngit stash apply\n\n<span class=\"hljs-comment\"># 应用最近一次的stash，随后删除该记录</span>\ngit stash pop\n\n<span class=\"hljs-comment\"># 删除最近的一次stash</span>\ngit stash drop\n</code></pre>\n<h1 id=\"reset\">3. reset</h1>\n<h4 id=\"commit\">代码回滚，撤销commit</h4>\n<pre><button type=\"button\" class=\"copy-button\">Copy</button><code class=\"hljs language-bash\"><span class=\"hljs-comment\"># 让 commit 记录强制回溯到某一个节点, 不会保存修改内容</span>\ngit reset --hard &#x3C;HEADId>\n\n<span class=\"hljs-comment\"># 除了回溯节点之外，还会保留节点修改的内容</span>\ngit reset --soft &#x3C;HEADId>\n\n<span class=\"hljs-comment\"># 场景：对于不小心把不该提交的内容commit了，这时想改回来只能在commit一次，这样就会出现一个黑历史</span>\n\n<span class=\"hljs-comment\"># 恢复最近一次commit，保持干净的commit记录（未push的commit）</span>\ngit reset --soft HEAD^ \n\n<span class=\"hljs-comment\"># 由于本地与远程分支有差异，需要强制推送来覆盖被reset的commit</span>\ngit push -f\n</code></pre>\n<h1 id=\"cherry-pick\">4. cherry-pick</h1>\n<h4 id=\"commitid\">将指定commitId复制到其他分支</h4>\n<pre><button type=\"button\" class=\"copy-button\">Copy</button><code class=\"hljs language-bash\">git cherry-pick &#x3C;HEADId>\n</code></pre>\n<h1 id=\"\">5. 重置本地代码</h1>\n<h4 id=\"merge\">远程仓库代码强制覆盖本地，可以强制去掉merge</h4>\n<pre><button type=\"button\" class=\"copy-button\">Copy</button><code class=\"hljs language-bash\"><span class=\"hljs-comment\"># 拉取所有更新，不同步</span>\ngit fetch --all\n\n<span class=\"hljs-comment\"># 本地代码同步线上最新版本(会覆盖本地所有与远程仓库上同名的文件)，git reset 指令把HEAD指向master最新版本</span>\ngit reset --hard origin/&#x3C;branch> \n\ngit pull --progress -v --no-rebase origin &#x3C;branch>\n</code></pre>\n<h1 id=\"rebase\">6. rebase</h1>\n<h4 id=\"rebase\">在进行rebase合并代码，出现冲突时：</h4>\n<ol>\n<li>解决冲突，使用 git add . 标记冲突已解决</li>\n<li>使用 git rebase --continue 继续下一个进程</li>\n<li>当想停止合并时，使用 git rebase --abort  恢复代码</li>\n</ol>\n<h4 id=\"\">删除某次提交</h4>\n<pre><button type=\"button\" class=\"copy-button\">Copy</button><code class=\"hljs language-bash\"><span class=\"hljs-comment\"># 找到要删除的commit上一次的commitId(git log的下面)</span>\ngit rebase -i &#x3C;上一次commitId>\n\n<span class=\"hljs-comment\"># 按i进入vim插入页面，将要删除的commit前面的pick改为drop</span>\n<span class=\"hljs-comment\"># 按esc退出插入页面，:wq保存退出</span>\n\n<span class=\"hljs-comment\"># 查看当前状态(有冲突解决冲突，没有就跳过)</span>\ngit status\n\ngit push origin &#x3C;branch> -f\n</code></pre>\n<h1 id=\"format-patch\">7. format-patch</h1>\n<h4 id=\"\">创建补丁</h4>\n<pre><button type=\"button\" class=\"copy-button\">Copy</button><code class=\"hljs language-bash\"><span class=\"hljs-comment\"># 为最近一次提交创建补丁</span>\ngit format-patch -1\n\n<span class=\"hljs-comment\"># 为最近的N次提交创建补丁，例如最近3次</span>\ngit format-patch -3\n\n<span class=\"hljs-comment\"># 创建特定范围内的补丁，例如从commitA到commitB之间所有提交</span>\ngit format-patch commitA^..commitB\n\n<span class=\"hljs-comment\"># 基于分支的补丁，为一个分支上比另一个分支多出的提交创建补丁</span>\n<span class=\"hljs-comment\"># 所有在feat-branch上，但不在master分支上的提交，都会被创建为补丁</span>\ngit format-patch master..feat-branch\n\n<span class=\"hljs-comment\"># 定制输出的补丁文件名，使用 -o 或 --output-directory 选项指定输出目录</span>\n<span class=\"hljs-comment\"># 这会将最后一次提交的补丁文件保存到 patches/ 目录下</span>\ngit format-patch -1 -o patches/\n</code></pre>\n<h1 id=\"apply\">8. apply</h1>\n<h4 id=\"git-apply\">应用补丁，git apply 命令用于将补丁文件中的更改应用到当前工作目录的文件中。它不会自动创建新的提交。</h4>\n<pre><button type=\"button\" class=\"copy-button\">Copy</button><code class=\"hljs language-bash\">git apply /path/to/patchfile.patch\n\n<span class=\"hljs-comment\"># 如果你想检查补丁是否能够成功应用（即执行一个干运行），可以使用 --check 选项</span>\ngit apply --check /path/to/patchfile.patch\n\n<span class=\"hljs-comment\"># - 如果补丁应用成功，但你希望撤销更改，可以使用 --reverse 选项</span>\ngit apply --reverse /path/to/patchfile.patch\n</code></pre>\n<h1 id=\"am\">9. am</h1>\n<h4 id=\"git-am\">应用补丁，git am 命令则用于将一个或多个从邮箱导出的补丁文件应用到当前分支，并且为每个补丁创建一个新的提交。这个命令特别有用，当你需要保留原始提交信息（比如提交作者、提交信息等）时。</h4>\n<pre><button type=\"button\" class=\"copy-button\">Copy</button><code class=\"hljs language-bash\">git am /path/to/patchfile.patch\n\n<span class=\"hljs-comment\"># 如果你有多个补丁文件，只需要指向包含所有补丁文件的目录即可</span>\ngit am /path/to/patches/*\n\n<span class=\"hljs-comment\"># 如果在应用某个补丁时出现冲突，git am 会停止应用操作并让你解决冲突。解决冲突后，你可以使用以下命令继续应用剩余的补丁</span>\ngit am --resolved\n\n<span class=\"hljs-comment\"># 如果你决定不应用当前的补丁并跳过它</span>\ngit am --skip\n\n<span class=\"hljs-comment\"># 若要中止整个应用补丁的操作并回到原始状态</span>\ngit am --abort\n</code></pre>"}}],["$","$c",null,{"fallback":null,"children":["$","$Ld",null,{"children":["$","$Le",null,{"data":{"title":"Git常用指令","date":"2024-07-05T00:00:00.000Z"}}]}]}]]
