1:HL["/_next/static/css/c18c2b7e2218a060.css",{"as":"style"}]
0:[[["",{"children":["blog",{"children":[["slug","javascript","d"],{"children":[["post","js-01","d"],{"children":["__PAGE__?{\"slug\":\"javascript\",\"post\":\"js-01\"}",{}]}]}]}]},"$undefined","$undefined",true],"$L2",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/c18c2b7e2218a060.css","precedence":"next"}]],["$L3",null]]]]
4:HL["/_next/static/css/7f6bd37aab40623f.css",{"as":"style"}]
5:I{"id":"105","chunks":["414:static/chunks/414-ae10eb72abcd9c6c.js","185:static/chunks/app/layout-2412716988d7b78a.js"],"name":"","async":false}
6:I{"id":"97","chunks":["414:static/chunks/414-ae10eb72abcd9c6c.js","185:static/chunks/app/layout-2412716988d7b78a.js"],"name":"","async":false}
7:I{"id":"8646","chunks":["414:static/chunks/414-ae10eb72abcd9c6c.js","185:static/chunks/app/layout-2412716988d7b78a.js"],"name":"","async":false}
8:I{"id":"3066","chunks":["414:static/chunks/414-ae10eb72abcd9c6c.js","185:static/chunks/app/layout-2412716988d7b78a.js"],"name":"","async":false}
9:I{"id":"9544","chunks":["272:static/chunks/webpack-9da99b36a20bd5ca.js","667:static/chunks/2443530c-38cbe0b4896a762b.js","139:static/chunks/139-829349179db9c29c.js"],"name":"","async":false}
a:I{"id":"99","chunks":["272:static/chunks/webpack-9da99b36a20bd5ca.js","667:static/chunks/2443530c-38cbe0b4896a762b.js","139:static/chunks/139-829349179db9c29c.js"],"name":"","async":false}
b:I{"id":"1093","chunks":["414:static/chunks/414-ae10eb72abcd9c6c.js","768:static/chunks/app/blog/layout-37452681f082ff0b.js"],"name":"","async":false}
2:[["$","html",null,{"lang":"en","children":["$","body",null,{"children":["$","$L5",null,{"children":["$","$L6",null,{"children":[["$","$L7",null,{}],["$","$L8",null,{"children":["$","$L9",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$La",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","asNotFound":"$undefined","childProp":{"current":[["$","div",null,{"className":"blog-layout","style":{"width":"100%"},"children":[["$","$Lb",null,{}],["$","$L9",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$La",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","asNotFound":"$undefined","childProp":{"current":["$","$L9",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children",["slug","javascript","d"],"children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$La",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","asNotFound":"$undefined","childProp":{"current":["$","$L9",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children",["slug","javascript","d"],"children",["post","js-01","d"],"children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$La",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","asNotFound":"$undefined","childProp":{"current":["$Lc",null],"segment":"__PAGE__?{\"slug\":\"javascript\",\"post\":\"js-01\"}"},"styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/7f6bd37aab40623f.css","precedence":"next"}]]}],"segment":["post","js-01","d"]},"styles":[]}],"segment":["slug","javascript","d"]},"styles":[]}]]}],null],"segment":"blog"},"styles":[]}]}],["$","div",null,{"className":"h-20 text-sm text-center leading-8 pt-3","children":[["$","p",null,{"children":"Welcome Fanxing's Web"}],["$","p",null,{"children":"这是我用来学习、记录、提升技能的个人网站"}]]}]]}]}]}]}],null]
3:[[["$","meta",null,{"charSet":"utf-8"}],["$","title",null,{"children":"Fanxing's Web"}],["$","meta",null,{"name":"description","content":"凡星（fanxing）的个人小站，记录学习。"}],null,null,null,null,null,null,null,null,["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1"}],null,null,["$","meta",null,{"name":"robots","content":"index,follow"}],null,null,null,null,null,null,null,[]],[null,null,null,null],null,null,[null,null,null,null,null],null,null,null,null,[null,[["$","link",null,{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"any"}]],[],null]]
d:"$Sreact.suspense"
e:I{"id":"2666","chunks":["112:static/chunks/app/blog/[slug]/[post]/page-6523f7beb1ffdf8e.js"],"name":"NoSSR","async":false}
f:I{"id":"7179","chunks":["112:static/chunks/app/blog/[slug]/[post]/page-6523f7beb1ffdf8e.js"],"name":"","async":false}
c:[["$","h1",null,{"className":"blog-title","style":{"borderBottom":0},"children":"Array常用方法"}],["$","div",null,{"className":"markdown-body","dangerouslySetInnerHTML":{"__html":"<h1 id=\"array.push(n1-n2-...)\">1. Array.push(n1, n2, ...)</h1>\n<p>描述: 从后面添加 <strong>一个或多个</strong> 元素。</p>\n<h6 id=\"\">返回值：添加后的数组长度</h6>\n<pre><button type=\"button\" class=\"copy-button\">Copy</button><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let</span> arr = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>];\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(arr.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>)); <span class=\"hljs-comment\">// 5</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(arr); <span class=\"hljs-comment\">// [1,2,3,4,5]</span>\n</code></pre>\n<h1 id=\"array.pop()\">2. Array.pop()</h1>\n<p>描述：从后面删除 <strong>一个（只能是一个）</strong> 元素。</p>\n<h6 id=\"\">返回值：删除后的元素</h6>\n<pre><button type=\"button\" class=\"copy-button\">Copy</button><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let</span> arr = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>];\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(arr.<span class=\"hljs-title function_\">pop</span>()); <span class=\"hljs-comment\">// 5</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(arr); <span class=\"hljs-comment\">// [1, 2, 3, 4]</span>\n</code></pre>\n<h1 id=\"array.shift()\">3. Array.shift()</h1>\n<p>描述：从前面删除 <strong>一个（只能是一个）</strong> 元素。</p>\n<h6 id=\"\">返回值：删除后的元素</h6>\n<pre><button type=\"button\" class=\"copy-button\">Copy</button><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let</span> arr = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>];\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(arr.<span class=\"hljs-title function_\">shift</span>()); <span class=\"hljs-comment\">// 1</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(arr); <span class=\"hljs-comment\">// [2,3,4,5]</span>\n</code></pre>\n<h1 id=\"array.unshift(n1-n2-...)\">4. Array.unshift(n1, n2, ...)</h1>\n<p>描述： 从前面添加 <strong>一个或多个</strong> 元素。</p>\n<h6 id=\"\">返回值：添加后数组的长度</h6>\n<pre><button type=\"button\" class=\"copy-button\">Copy</button><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let</span> arr = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>];\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(arr.<span class=\"hljs-title function_\">unshift</span>(<span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">7</span>)); <span class=\"hljs-comment\">// 7</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(arr); <span class=\"hljs-comment\">// [6,7,1,2,3,4,5]</span>\n</code></pre>\n<h1 id=\"array.splice(index-num)\">5. Array.splice(index, num)</h1>\n<p>描述：删除 <strong>索引</strong> 从 <strong>index</strong> 开始，<strong>num</strong> 个元素。 如果 <strong>num</strong> 不传时，默认删除索引为 <strong>index</strong> 后面的所有元素（包括 <strong>index</strong>）。</p>\n<h6 id=\"\">返回值：删除的元素数组</h6>\n<h6 id=\"\">注意：会改变原数组</h6>\n<pre><button type=\"button\" class=\"copy-button\">Copy</button><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let</span> arr = [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>];\n\n<span class=\"hljs-comment\">// 1. 删除数组中的某些项</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(arr.<span class=\"hljs-title function_\">splice</span>(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>)); <span class=\"hljs-comment\">// [2, 3]</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(arr); <span class=\"hljs-comment\">// [0, 1, 4]</span>\n\n<span class=\"hljs-comment\">// 2. 删除指定index后的所有元素</span>\n<span class=\"hljs-keyword\">let</span> arr2 = [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>];\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(arr2.<span class=\"hljs-title function_\">splice</span>(<span class=\"hljs-number\">2</span>)); <span class=\"hljs-comment\">// [3,4,5]</span>\n\n<span class=\"hljs-comment\">// 2. 将数据添加至数组的特定索引位置index</span>\n<span class=\"hljs-keyword\">let</span> arr2 = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>];\n\narr2.<span class=\"hljs-title function_\">splice</span>(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-string\">\"测试值\"</span>);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(arr2); <span class=\"hljs-comment\">// [1, 2, \"测试值\", 3, 4, 5]</span>\n</code></pre>\n<h1 id=\"array.tospliced(index-num)\">6. Array.toSpliced(index, num) <code>ES2023</code></h1>\n<p>描述： 删除 <strong>索引</strong> 从 <strong>index</strong> 开始，<strong>num</strong> 个元素。 如果 <strong>num</strong> 不传时，默认删除索引为 <strong>index</strong> 后面的所有元素（包括 <strong>index</strong>）。</p>\n<h6 id=\"index-num\">参数：index 索引值，num 个数</h6>\n<pre><button type=\"button\" class=\"copy-button\">Copy</button><code class=\"hljs language-javascript\"><span class=\"hljs-comment\">// 1. 删除数组中的某些项</span>\n<span class=\"hljs-keyword\">let</span> arr = [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>];\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(arr.<span class=\"hljs-title function_\">toSpliced</span>(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>)); <span class=\"hljs-comment\">// [0, 1, 4]</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(arr); <span class=\"hljs-comment\">// [0, 1, 2, 3, 4]</span>\n\n<span class=\"hljs-comment\">// 2. 将数据添加至数组的特定索引位置index</span>\n<span class=\"hljs-keyword\">let</span> arr2 = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>];\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(arr2.<span class=\"hljs-title function_\">toSpliced</span>(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-string\">\"测试值\"</span>)); <span class=\"hljs-comment\">// [1, 2, \"测试值\", 3, 4, 5]</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(arr2); <span class=\"hljs-comment\">// [1, 2, 3, 4, 5]</span>\n</code></pre>\n<h1 id=\"string.split()\">7. String.split() <code>字符串方法</code></h1>\n<p>描述：将字符串转化为数组。</p>\n<pre><button type=\"button\" class=\"copy-button\">Copy</button><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let</span> str = <span class=\"hljs-string\">\"12345\"</span>;\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(str.<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-string\">\"\"</span>)); <span class=\"hljs-comment\">// [\"1\",\"2\",\"3\",\"4\",\"5\"]</span>\n\n<span class=\"hljs-keyword\">let</span> str1 = <span class=\"hljs-string\">\"1/2/3/4/5\"</span>;\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(str1.<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-string\">\"/\"</span>)); <span class=\"hljs-comment\">// [\"1\",\"2\",\"3\",\"4\",\"5\"]</span>\n</code></pre>\n<h1 id=\"array.concat(arr1)\">8. Array.concat(arr1)</h1>\n<p>描述：连接两个数组。</p>\n<h6 id=\"\">返回值： 连接后的新数组</h6>\n<pre><button type=\"button\" class=\"copy-button\">Copy</button><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let</span> arr = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>];\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(arr.<span class=\"hljs-title function_\">concat</span>([<span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">7</span>])); <span class=\"hljs-comment\">// [1,2,3,4,5,6,7]</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(arr); <span class=\"hljs-comment\">// [1, 2, 3, 4, 5]</span>\n</code></pre>\n<h1 id=\"array.sort(callback-(a-b)-number)\">9. Array.sort(callback?: (a,b) => number)</h1>\n<p>描述：将数组进行排序（默认是按照 <strong>首位数字</strong> 进行排序，非数字整体大小）。</p>\n<p>callback 返回解析：</p>\n<ol>\n<li>返回值 <strong>小于 0</strong> >：将 <strong>a</strong> 放在 <strong>b</strong> 前面。</li>\n<li>返回值 <strong>等于 0</strong> ：保持 <strong>a</strong> 和 <strong>b</strong> 的相对位置不变。</li>\n<li>返回值 <strong>大于 0</strong> ：将 <strong>b</strong>> 放在 <strong>a</strong>> 前面。</li>\n</ol>\n<h6 id=\"\">返回值：排序后的数组</h6>\n<pre><button type=\"button\" class=\"copy-button\">Copy</button><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let</span> arr = [<span class=\"hljs-number\">40</span>, <span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">79</span>, <span class=\"hljs-number\">3</span>];\n\n<span class=\"hljs-comment\">// 默认首位数字排序</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(arr.<span class=\"hljs-title function_\">sort</span>()); <span class=\"hljs-comment\">// [10,3,40,5,79,8]</span>\n\n<span class=\"hljs-comment\">//</span>\n<span class=\"hljs-keyword\">let</span> arr2 = arr.<span class=\"hljs-title function_\">sort</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">a, b</span>) =></span> a - b);\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(arr2); <span class=\"hljs-comment\">// [3,5,8,10,40,79]</span>\n\n<span class=\"hljs-keyword\">let</span> arr3 = arr.<span class=\"hljs-title function_\">sort</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">a, b</span>) =></span> b - a);\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(arr3); <span class=\"hljs-comment\">// [79,40,10,8,5,3]</span>\n</code></pre>\n<pre><button type=\"button\" class=\"copy-button\">Copy</button><code class=\"hljs language-javascript\"><span class=\"hljs-comment\">/**\n * 注：用 `localeCompare` 方法实现对汉字排序\n * String.prototype.localeCompare 在不考虑多音字的前提下，基本可以完美实现按照拼音排序\n * localCompare 是根据我们的中文系统，把汉字先转换成了拼音，再进行了比较；对于同拼音的汉字，js 再根据声调进行比较\n */</span>\n\n<span class=\"hljs-keyword\">let</span> arr = [<span class=\"hljs-string\">\"北京\"</span>, <span class=\"hljs-string\">\"北方\"</span>, <span class=\"hljs-string\">\"beijing\"</span>, <span class=\"hljs-string\">\"背影\"</span>, <span class=\"hljs-string\">\"背景\"</span>];\narr.<span class=\"hljs-title function_\">sort</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">a, b</span>) =></span> a.<span class=\"hljs-title function_\">localeCompare</span>(b)); <span class=\"hljs-comment\">// ['北方', '北京', '背景', '背影', 'beijing']</span>\n</code></pre>\n<p><a href=\"#array.push(n1-n2-...)\">PUSH</a></p>"}}],["$","$d",null,{"fallback":null,"children":["$","$Le",null,{"children":["$","$Lf",null,{}]}]}]]
